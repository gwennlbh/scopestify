name: Code Quality & Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: ./ScopestifyExtension.sln
  BUILD_CONFIGURATION: Debug

jobs:
  lint:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dotnet tools
      run: dotnet tool restore

    - name: Restore NuGet packages
      run: dotnet restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Check code formatting
      run: dotnet csharpier check .
      continue-on-error: false

    - name: Run .NET code analysis
      run: |
        dotnet build ${{ env.SOLUTION_FILE_PATH }} `
          --configuration ${{ env.BUILD_CONFIGURATION }} `
          --no-restore `
          --verbosity normal `
          -p:RunAnalyzersDuringBuild=true `
          -p:TreatWarningsAsErrors=false
      shell: powershell

    - name: Security analysis - Package vulnerabilities
      run: |
        echo "Running security analysis..."
        $output = dotnet list package --vulnerable --include-transitive 2>&1
        if ($LASTEXITCODE -eq 0 -and ($output -match "has the following vulnerable packages")) {
          Write-Error "Vulnerable packages detected!"
          Write-Output $output
          exit 1
        } elseif ($output -match "Sequence contains no matching element") {
          echo "✅ No vulnerable packages found."
        } else {
          echo "✅ Package vulnerability scan completed successfully."
        }
      shell: powershell

    - name: Check for deprecated NuGet packages
      run: |
        echo "Checking for deprecated packages..."
        $output = dotnet list package --deprecated 2>&1
        if ($LASTEXITCODE -eq 0 -and ($output -match "has the following deprecated packages")) {
          Write-Warning "⚠️ Deprecated packages found - consider updating:"
          Write-Output $output
        } elseif ($output -match "Sequence contains no matching element") {
          echo "✅ No deprecated packages found."
        } else {
          echo "✅ Deprecated package check completed successfully."
        }
      shell: powershell

    - name: Generate analysis report
      if: always()
      run: |
        echo "## Code Quality Report" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### Formatting Check" >> $env:GITHUB_STEP_SUMMARY
        echo "✅ Code formatting verified with CSharpier" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### Static Analysis" >> $env:GITHUB_STEP_SUMMARY
        echo "✅ .NET analyzers executed with build" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### Security Analysis" >> $env:GITHUB_STEP_SUMMARY
        echo "✅ Package vulnerability and deprecation scan completed" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### Configuration" >> $env:GITHUB_STEP_SUMMARY
        echo "- .NET Analyzers: Enabled (AnalysisMode: Recommended)" >> $env:GITHUB_STEP_SUMMARY
        echo "- Code formatter: CSharpier" >> $env:GITHUB_STEP_SUMMARY
        echo "- Build configuration: Debug" >> $env:GITHUB_STEP_SUMMARY
      shell: powershell