name: Code Formatting
# This workflow uses a deploy key to bypass branch protection rules when pushing formatted code.
# See .github/DEPLOY_KEY_SETUP.md for setup instructions.

on:
  push:
    branches: [ main ]
    paths: ['**.cs']
  pull_request:
    branches: [ main ]
    paths: ['**.cs']

jobs:
  format:
    runs-on: windows-latest

    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v5
      with:
        # Use deploy key for checkout to bypass branch protection rules when pushing
        ssh-key: ${{ secrets.DEPLOY_KEY }}
        # Fetch full history for proper git operations
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '9.0.x'

    - name: Restore dotnet tools
      run: dotnet tool restore

    - name: Check formatting
      if: github.event_name == 'pull_request'
      run: dotnet csharpier check .

    - name: Format code
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: dotnet csharpier format .

    - name: Commit formatted changes
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --staged --quiet || git commit -m "ðŸŽ¨ Auto-format code with CSharpier [skip ci]"
        # Push using SSH deploy key (configured during checkout)
        # This allows pushing even when branch protection rules require status checks
        git push
